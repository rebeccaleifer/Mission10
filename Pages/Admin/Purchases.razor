@page "/admin/Purchases"
@inherits OwningComponentBase<IPurchaseRepository>

<PurchaseTable TableTitle="Not Yet Shipped" Purchases="UncollectedPurchases"
               ButtonLabel="Shipped" PurchaseSelected="CollectPurchase"></PurchaseTable>

<PurchaseTable TableTitle="Shipped Purchases" Purchases="CollectedPurchases"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>
<button class="btn btn-info" @onclick="@(x=> UpdateData())">Refresh Data</button>

@code {
    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AllPurchases = await repo.purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.PurchaseReceived);
        CollectedPurchases = AllPurchases.Where(x => x.PurchaseReceived);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase (int id, bool purchased)
    {
        Purchase p = repo.purchases.FirstOrDefault(x => x.PurchaseId == id);
        p.PurchaseReceived = purchased;
        repo.SavePurchase(p);
    }
}